#!/usr/bin/env python

# Lint as: python3

import argparse
import os
import base64
import json
import sys


def mint(proto_file, apk_file):
  cmd = 'stubby call localhost:8087 --output_json WebApkService.CreateOrUpdate < %s  > tmp' % proto_file
  print ">> Executing " + cmd
  os.system(cmd)

  with open("tmp", "r") as f:
    mint_result = json.load(f)
    download(mint_result["download_url"], apk_file);
  os.system("rm tmp")

def mint_enterprise(proto_file, apk_file):
  cmd = 'stubby call localhost:8087 --output_json EnterpriseService.CreateEnterpriseApk < %s  > tmp' % proto_file
  print ">> Executing " + cmd
  os.system(cmd)

  with open("tmp", "r") as f:
    mint_result = json.load(f);
    apk = base64.b64decode(mint_result['apk_blob'])
    with open(apk_file, "w") as out:
      out.write(apk);
    with open("/usr/local/google/home/eirage/DriveFileStream/My Drive/AndroidApks/webapk.apk", "w") as out:
      out.write(apk);
  os.system("rm tmp")

def download(url, apk_file):
  cmd = "wget -O %s %s" % (apk_file, url)
  print ">> Executing " + cmd
  os.system(cmd);


def install(apk_file):
  if not apk_file:
    apk_file = twitter.proto.apk
  cmd = "adb install -r -d %s" % apk_file
  print ">> Executing " + cmd
  os.system(cmd);

def printphoto(fin, fout):
    cmd = "eg printproto %s %s" % (fin, fout)
    print ">> Executing " + cmd
    os.system(cmd);

def getNames(filename):
  filenames = filename.split('.')
  if filenames[-1] == "proto" or filenames[-1] == "req":
    rawName = ('.').join(filenames[:-1])
  else:
    rawName = filename;

  if filenames[-1] == "req":
    printphoto(filename, rawName+ ".proto")

  return rawName + '.proto', rawName + '.apk'

def main():
  parser = argparse.ArgumentParser(
              description=__doc__, formatter_class=argparse.RawTextHelpFormatter)

  parser.add_argument(
      '--enterprise', '-e',
      dest="minting",
      action='store_const',
      const=mint_enterprise,
      default=mint,
      metavar='Enterprise')
  parser.add_argument('file_name', metavar='PROTO_FILE', nargs='?',
                      default="/usr/local/google/home/eirage/WebAPK/eg.proto")
  parser.add_argument('apk_name', metavar='APK_FILE', nargs='?')

  args, _extras = parser.parse_known_args()
  print args;

  [proto_file, apk_file] = getNames(args.file_name);
  if args.apk_name:
    apk_file = args.apk_name

  args.minting(proto_file, apk_file)

#  if not enterprise:
#    url = mint(proto_file);
# 
#  else:
#    mint_enterprise(proto_file);
#
#  install(apk_file);


if __name__ == '__main__':
  sys.exit(main())
