#!/bin/sh


ProgName=$(basename $0)

sub_help() {
  echo "Usage: $ProgName <subcommand> [options]\n"
  echo "Subcommands:"
  echo "    tmux:        Start tmux"
  echo "    twa:         Start tmux twa window"
  echo "    mint:        Mint WebApk"
  echo "    server:      Start WAM sub_server"
  echo "    proxy:       Connect phone to proxy"
  echo "    stopproxy:   Remove proxy settings from phone"
  echo "    proto:       printroto"
  echo ""
  echo "For help with each subcommand run:"
  echo "$ProgName <subcommand> -h|--help"
  echo ""
}

sub_mint() {
  mint $1
}

sub_tmux() {
  run_tmux
}

sub_server() {
  server
}

sub_proxy() {
  charles &
  adb reverse tcp:8888 tcp:8888
  adb shell settings put global http_proxy 127.0.0.1:8888
}

sub_proxystop() {
  sub_stopproxy
}

sub_stopproxy() {
  adb shell settings delete global http_proxy
  adb shell settings delete global global_http_proxy_host
  adb shell settings delete global global_http_proxy_port

  kill $(ps aux | grep 'charles' | awk '{print $2}')
  adb reboot
}

sub_printproto() {
  echo "web_apk: {" > $2
  printproto --proto2 --raw_protocol_buffer --multiline --message google.chrome.webapk.v1.WebApk $1 >> $2
  echo "}" >> $2
}

sub_proto() {
  sub_printproto $1 $2
}

sub_twa() {
  tmux new-window -n "TWA"
  tmux send-keys "cd ~/android-browser-helper/" C-m
  tmux split-window -h
  tmux send-keys "cd ~/TWA" C-m
}


subcommand=$1
case $subcommand in
  "" | "-h" | "--help")
    sub_help
    ;;
  *)
    shift
    sub_${subcommand} $@
    if [ $? = 127 ]; then
      echo "Error: '$subcommand' is not a known subcommand." >&2
      echo "       Run '$ProgName --help' for a list of known subcommands." >&2
      exit 1
    fi
    ;;
esac
